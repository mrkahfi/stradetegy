{% extends 'JariffProjectBundle::base_search_new.html.twig' %}
{% form_theme formAppend 'JariffProjectBundle:Themes:bootstrap_3_horizontal_layout_st_search.html.twig' %}

    {% block top_inner %}
        <header id="header" class="sticky-style-2">

            <div class="container clearfix">

                <!-- Logo
                ============================================= -->
                <div id="logo">
                    <a href="#" class="standard-logo" data-dark-logo="images/logo-dark.png"><img
                                src="{{ asset('/bundles/jariffproject/frontend/images/logo.png') }}"
                                alt="stradetegy Logo"></a>
                    <a href="#" class="retina-logo" data-dark-logo="images/logo-dark@2x.png"><img
                                src="{{ asset('/bundles/jariffproject/frontend/images/logo@2x.png') }}"
                                alt="stradetegy Logo"></a>
                </div>
                <!-- #logo end -->

                <ul class="header-extras">
                    <li>
                        <i class="i-plain icon-email3 nomargin"></i>

                        <div class="he-text">
                            Drop an Email
                            <span>info@stradetegy.com</span>
                        </div>
                    </li>
                    <li>
                        <i class="i-plain icon-call nomargin"></i>

                        <div class="he-text">
                            Get in Touch
                            <span>555-666-777</span>
                        </div>

                    </li>
                </ul>

            </div>

            <div id="header-wrap">

                <!-- Primary Navigation
                ============================================= -->
                <nav id="primary-menu" class="style-2 sub-title">
                    <div class="container clearfix">
                        {#<form action="{{ path('demo_global_search_submit') }}" method="POST">#}

                            {#{{ form_row(form.q,{attr: {style:'margin-top: 6px' }}) }}#}


                            {#<div class="col-sm-2" style="margin-top: 6px">#}
                                {#<button class="btn-lg btn-primary">Find Now</button>#}
                            {#</div>#}

                            {#{{ form_row(form.category,{attr: {style:'display: none' }}) }}#}
                            {#&#123;&#35;  <div class="col-sm-8" style="margin-top: 6px">#}


                                 {#<input type="text" class="form-control input-lg" id="exampleInputAmount" placeholder="TYPE AND HIT ENTER">#}

                             {#</div> &#35;&#125;#}
                            {#{{ form_rest(form) }}#}

                        {#</form>#}
                    </div>
                </nav>
                <!-- #primary-menu end -->


            </div>

        </header>
    {% endblock top_inner %}
{% block middle_content %}



    <section id="content">

    <div>
        <div>

        <div class="col-md-12" style="margin-bottom: 30px;">

                <form action="{{ path('member_search_big_picture_submit') }}" method="POST">

                    <div class="col-md-2">
                    {{ form_row(form.country) }}
                    </div>
                    <div class="col-md-2">
                    {{ form_row(form.category) }}
                    </div>
                    <div class="col-md-3">
                    {{ form_row(form.q) }}
                    </div>
                    {{ form_rest(form) }}
                    <div class="col-md-1">
                        <label style="color: #ffffff">...</label>
                        <button class="btn btn-primary" id="clearSearch">New Search</button>
                    </div>
                    <div class="col-md-1">
                        <label style="color: #ffffff">Search</label>
                        <button class="btn btn-primary">Search</button>
                    </div>

                </form>
        </div>

        </div>

        <div style="margin-left: 15px;">
            <div class="j-content-result">

                <div class="col-md-3">
                    <div style="margin-top:20px;text-align: center">
                        <img src="/bundles/jariffproject/frontend/images-old/301.GIF">
                        <h5 style="margin-top: 15px">Loading...</h5>
                    </div>
                </div>
                <div class="col-md-9">
                    <div>
        <form action="#" id="filter_form" class="nobottommargin" style="display: none;">
            <div title="Unlimited number of searches" class="col_one_sixth">
                <label for="term_key">Filter by term</label>
                <input type="text" name="term_key" id="term_key"  class="form-control"/>
            </div>
            <div class="col_five_sixth col_last">
                <div title="How many shipment records would you like to download per month?" class="col_one_sixth">
                    <label for="sort">Sort by</label>
                    <select id="sort" class="form-control">
                        <option value="0">Most shipment</option>
                        <option value="1">Company name (A-Z)</option>
                    </select>
                </div>
                <div class="col_one_fourth">
                    <label for="date_range">Date of last shipment</label>
                    <select id="date_range" class="form-control">
                            <option value="1">Within last year</option>
                            <option value="2">Within last 2 years</option>
                            <option value="3">Within last 3 years</option>
                            <option value="4">Within last 4 years</option>
                            <option value="5">Within last 5 years</option>
                            <option value="6">Within last 6 years</option>
                            <option value="7">Within last 7 years</option>
                            <option value="8" selected="selected">Within last 8 years</option>
                    </select>
                </div>
                <div title="Unlimited number of searches" class="col_one_sixth">
                    <label for="country">Country</label>
                    <select id="country" class="form-control">
                        <option value="any">Any</option>
                    </select>
                </div>
                <div title="How many shipment records would you like to download per month?" class="col_one_fifth">
                    <label for="limit">Company Limit</label>
                    <select id="limit" class="form-control">
                        <option value="20">Top 20</option>
                        <option value="10">Top 10</option>
                        <option value="5">Top 5</option>
                    </select>
                </div>
                <div class="col_one_sixth">
                    <label for="offset">Offset</label>
                    <select id="offset" class="form-control">
                        <option value="0" selected="selected">0</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                        <option value="20">20</option>
                    </select>
                </div>  
            </div>           
        </form> 
    </div>
    <div id="infovis" class="col-md-12">
        <div style="position: absolute; background: rgba(223, 224, 225, .2); top: 0; left: 0; height: 100%; width: 100%; padding-top: 100px; padding-left: 100px; text-align: left;"  id="map_loading_div">
            <img src="/bundles/jariffproject/frontend/images-old/301.GIF">
            <h5 style="margin-top:30px;" id="map_loading_text">Loading...</h5>
        </div>
    </div>
</div>

            </div>
        </div>

    <br/>
    <br/>
    <br/>



    </div>
    </div>
    </section>

    <div id="modalSave" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
        <div class="modal-dialog">
            <div class="modal-content modal-lg">
                <div class="modal-body st-content">

                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block style %}
    <link href="{{ asset('/bundles/jariffproject/frontend/css-old/bootstrap.css') }}" type="text/css"
          rel="stylesheet"
          media="screen"/>
    <style type="text/css">
    label {
        display: inline-block;
        font-size: 12px;
        font-weight: 700;
        font-family: 'Raleway', sans-serif;
        text-transform: uppercase;
        letter-spacing: 1px;
        color: #555;
        margin-bottom: 10px;
        cursor: pointer;
    }

    .col_one_sixth {
        margin-bottom: 0px;
    }

    .col_five_sixth {
        margin-bottom: 0px;
    }

    .foo {
        border-color: blue; /* To see what is going on */
        float: right;
    }â€‹
    .node {
        cursor: pointer;
    }
    .node circle {
        fill: #fff;
        stroke: steelblue;
        stroke-width: 3px;
    }
    .node text {
        font: 12px sans-serif;
    }
    .link {
        fill: none;
        stroke: #ccc;
        stroke-width: 2px;
    }

    div.tooltip {   
      position: absolute;           
      text-align: left;           
      width: 250px;                  
      height: 100px;                 
      padding: 5px;             
      font: 12px sans-serif;        
      background: white;   
      border: 4px;          
      opacity: 1;   
      overflow: hidden;    
    }
    </style>
    {% endblock %}

    {% block javascript %}
      
    <script language="javascript" type="text/javascript" src="{{ asset('/bundles/jariffproject/frontend/js/d3.min.js') }}"></script>
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script language="javascript" type="text/javascript" src="{{ asset('/bundles/jariffproject/frontend/js/JSLINQ.js') }}"></script>
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>


    <script type="text/javascript">
        $(document).on('click', '#search_button', function(e) {

        });

    $(document).ready(function () {

        $('#myForm').on('submit', function () {
            var value = $(this).serialize();
            var url = Routing.generate('big_picture_search_buyer', {key: value.split("=")[1]});
            if (value.split("=")[1]) {
                $.ajax({
                    type: 'GET',
                    url: '{{ path('ajax_big_picture_buyer_search') }}',
                    data: {key: value.split("=")[1]},
                    success: function (data) {
                        $('#search-result').html(data);
                        $("#tabs").tabs("select", 2);
                    }
                });

                $.ajax({
                    type: 'GET',
                    url: '{{ path('ajax_count_buyer') }}',
                    data: {key: value.split("=")[1]},
                    success: function (data) {
                        $('.count-buyer').html(data);
                    }
                });
            } else {
                alert("field cannot empty");
            }
            return false;
        });
    })
    </script>

    <script type="text/javascript">
    // Define the drag listeners for drag/drop behaviour of nodes.

    var category = '{{ category }}';
    
    var selectedNode = null;
    var draggingNode = null;
    // panning variables
    var panSpeed = 200;
    var panBoundary = 20; // Within 20px from edges will pan when dragging.
    // Misc. variables
    var i = 0;
    var duration = 750;
    var root;

    // size of the diagram
    var viewerWidth = $(document).width();
    var viewerHeight = $(document).height();

    function endDrag() {
        selectedNode = null;
        d3.selectAll('.ghostCircle').attr('class', 'ghostCircle');
        d3.select(domNode).attr('class', 'node');
        // now restore the mouseover event or we won't be able to drag a 2nd time
        d3.select(domNode).select('.ghostCircle').attr('pointer-events', '');
        updateTempConnector();
        if (draggingNode !== null) {
            update(root);
            centerNode(draggingNode);
            draggingNode = null;
        }
    }


    $("#filter_form").submit(function() {
        return false;
    });

    $("#clearSearch").click(function(e) {
        e.preventDefault();
        window.location.href = "{{ url('member_search_big_picture') }}";
        return false;
    });


    var sort = $('#sort').val();
    var date_range = $('#date_range').val();
    var country = $('#country').val();
    console.log('country '+country);
    var limit = $('#limit').val();
    var offset = $('#offset').val();

    var filterMode = false;

    var preloader_img = $('#map_loading_div');
    var preloader_text = $('#map_loading_text');



    // vars for d3js
    var key='';

    var margin = [0, 20, 20, 300],
    width = $('#infovis').width()  - margin[1] - margin[3],
    height = $('#infovis').width() - margin[0] - margin[2],
    i = 0;
    var isBasicInfoLoaded = false;
    var div = d3.select("body").append("div").attr("class", "tooltip").style("opacity", 0);
    var tree = d3.layout.tree().size([height, width]);
    var vis = d3.select("#infovis").append("svg:svg").attr("width", width + margin[1] + margin[3]).attr("height", height + margin[0] + margin[2]).append("svg:g").attr("transform", "translate(" + margin[3] + "," + margin[0] + ")");
    var highest_shipment = 1;
    var diagonal = d3.svg.diagonal().projection(function(d) {
            return [d.y, d.x];
        });

    $("input[name=term_key]").change(function(e) {
        e.preventDefault();
        filter()
        return false;
    });

    $("select").change(function(e) {
        e.preventDefault();
        filter()
        return false;
    });

    function filter(e) {

        key = $('#term_key').val();
        sort = $('#sort').val();
        date_range = $('#date_range').val();
        country = $('#country').val();
        limit = $('#limit').val();
        offset = $('#offset').val();

        var today = new Date();
        var dd = ("0" + today.getDate()).slice(-2);
        var mm = ("0" + (today.getMonth() + 1)).slice(-2);
        var yyyy = today.getFullYear();
        var prevYear = yyyy-date_range;

        var d2 = Date.parse(prevYear+"-"+mm+"-"+dd);

        console.log(d2);

        console.log(root_origin.children);

        var newList = JSLINQ(root_origin.children).Where(function(item){ 
            var isValid = true;
            if (country == 'any') {
                isValid = true;
            } else {
                console.log(item.slug_country + " ----- " + country);
                if (item.slug_country == country) {
                    isValid = true;
                } else {
                    isValid = false;
                }
            }

            console.log(item.actual_arrival_date + " vs " + prevYear+"-"+mm+"-"+dd);
            isValid = isValid && compareDate(item.actual_arrival_date, d2);
            isValid = isValid && item.product_desc.toLowerCase().indexOf(key.toLowerCase()) > -1;
            console.log(isValid);
            return isValid; 
        }).Select(function(item){ return item; });

        console.log(newList);

        var newRoot = jQuery.extend({}, root_origin);
        newRoot.children = newList.items;

        if (sort == 0) {
            newRoot.children.sort(compareShipment);
        } else {
            newRoot.children.sort(compareAlpha);
        }

        newRoot.children = newRoot.children.slice(parseInt(offset), parseInt(limit) + parseInt(offset));

        filterMode = true;
        update(key, newRoot, true);
    }

    function compareShipment(a,b) {
        if (a.shipment_count < b.shipment_count)
            return 1;
        if (a.shipment_count > b.shipment_count)
            return -1;
        
        return 0;
    }

    function compareAlpha(a,b) {
        if (a.name < b.name) {
            return -1;
        }
        if (a.name > b.name) {
            return 1;
        }
        return 0;
    }

    function compareDate(a, d2) {

        var d1 = Date.parse(a);

        if (d2 < d1) {
            return true;
        } else {
            return false;
        }
    }



    function loadTree(slug, name) {
            $('#map_loading_div').show();
            $('#map_loading_text').html("Loading the big picture of " + name);
        console.log('loading treee....');
        key = slug;
        loadNodes(vis, slug, key, sort, date_range, country, limit, offset, category);

    }

    function loadTree(slug, name, cat) {
            $('#map_loading_div').show();
            $('#map_loading_text').html("Loading the big picture of " + name);
        console.log('loading treee....');
        key = slug;
        loadNodes(vis, slug, key, sort, date_range, country, limit, offset, cat);
        category = cat;
    }

    var root_origin;
    // var slug = 'michaels-stores-procurement';    // var key = slug;    // var key = slug;    // var key = slug;
    // var key = slug;


    function initiateDrag(d, domNode) {
        draggingNode = d;
        d3.select(domNode).select('.ghostCircle').attr('pointer-events', 'none');
        d3.selectAll('.ghostCircle').attr('class', 'ghostCircle show');
        d3.select(domNode).attr('class', 'node activeDrag');

        svgGroup.selectAll("g.node").sort(function(a, b) { // select the parent and sort the path's
            if (a.id != draggingNode.id) return 1; // a is not the hovered element, send "a" to the back
            else return -1; // a is the hovered element, bring "a" to the front
        });
        // if nodes has children, remove the links and nodes
        if (nodes.length > 1) {
            // remove link paths
            links = tree.links(nodes);
            nodePaths = svgGroup.selectAll("path.link")
                .data(links, function(d) {
                    return d.target.id;
                }).remove();
            // remove child nodes
            nodesExit = svgGroup.selectAll("g.node")
                .data(nodes, function(d) {
                    return d.id;
                }).filter(function(d, i) {
                    if (d.id == draggingNode.id) {
                        return false;
                    }
                    return true;
                }).remove();
        }

        // remove parent link
        parentLink = tree.links(tree.nodes(draggingNode.parent));
        svgGroup.selectAll('path.link').filter(function(d, i) {
            if (d.target.id == draggingNode.id) {
                return true;
            }
            return false;
        }).remove();

        dragStarted = null;
    }

    function loadNodes(rootNode, slug, key, sort, date_range, country, limit, offset, cat) {
        var route = "{{ url('member_buyers_big_picture_json', { 'slug' : "PLACEHOLDER", 'mode' : "5000", 'key': "PLACEHOLDER2", 'sort': "PLACEHOLDER3", 'date_range': "PLACEHOLDER4", 'country': "PLACEHOLDER5", 'limit': "PLACEHOLDER6", 'offset': "PLACEHOLDER7" }) }}";
        if (cat == "suppliers") {
            route = "{{ url('member_suppliers_big_picture_json', { 'slug' : "PLACEHOLDER", 'mode' : "5000", 'key': "PLACEHOLDER2", 'sort': "PLACEHOLDER3", 'date_range': "PLACEHOLDER4", 'country': "PLACEHOLDER5", 'limit': "PLACEHOLDER6", 'offset': "PLACEHOLDER7" }) }}";
        }
        route = route.replace("PLACEHOLDER", slug);
        route = route.replace("PLACEHOLDER2", key);
        route = route.replace("PLACEHOLDER3", sort);
        route = route.replace("PLACEHOLDER4", date_range);
        route = route.replace("PLACEHOLDER5", country);
        route = route.replace("PLACEHOLDER6", limit);
        route = route.replace("PLACEHOLDER7", offset);
        route = route.replace("5000", 0);
        d3.json(route, function(json) {
            root_origin = json;
            var root = json;
            root.x0 = width / 2;
            root.y0 = height / 2;

            dragListener = d3.behavior.drag().on("dragstart", function(d) {
                if (d == root) {
                    return;
                }

                dragStarted = true;
                nodes = tree.nodes(d);
                d3.event.sourceEvent.stopPropagation();
            }).on("drag", function(d) {
                if (d == root_origin) {
                    return;
                }

                if (dragStarted) {
                    domNode = this;
                    initiateDrag(d, domNode);
                }

                // get coords of mouseEvent relative to svg container to allow for panning
                relCoords = d3.mouse($('svg').get(0));
                if (relCoords[0] < panBoundary) {
                    panTimer = true;
                    pan(this, 'left');
                } else if (relCoords[0] > ($('svg').width() - panBoundary)) {
                    panTimer = true;
                    pan(this, 'right');
                } else if (relCoords[1] < panBoundary) {
                    panTimer = true;
                    pan(this, 'up');
                } else if (relCoords[1] > ($('svg').height() - panBoundary)) {
                    panTimer = true;
                    pan(this, 'down');
                } else {
                    try {
                        clearTimeout(panTimer);
                    } catch (e) {

                    }
                }

                d.x0 += d3.event.dy;
                d.y0 += d3.event.dx;
                var node = d3.select(this);
                node.attr("transform", "translate(" + d.y0 + "," + d.x0 + ")");
                updateTempConnector();
            }).on("dragend", function(d) {
                if (d == root_origin) {
                    return;
                }

                domNode = this;
                if (selectedNode) {
                    // now remove the element from the parent, and insert it into the new elements children
                    var index = draggingNode.parent.children.indexOf(draggingNode);
                    if (index > -1) {
                        draggingNode.parent.children.splice(index, 1);
                    }

                    if (typeof selectedNode.children !== 'undefined' || typeof selectedNode._children !== 'undefined') {
                        if (typeof selectedNode.children !== 'undefined') {
                            selectedNode.children.push(draggingNode);
                        } else {
                            selectedNode._children.push(draggingNode);
                        }
                    } else {
                        selectedNode.children = [];
                        selectedNode.children.push(draggingNode);
                    }

                    // Make sure that the node being added to is expanded so user can see added node is correctly moved
                    expand(selectedNode);
                    sortTree();
                    endDrag();
                } else {
                    endDrag();
                }
            });

            highest_shipment = root.shipment_count;

            if (!isBasicInfoLoaded) {
                var countries = root.countries;
                Object.keys(countries).forEach(function(key) {
                    $("#country").append("<option value='" + key + "'>" + countries[key].substr(3) + "</option>");
                });
                for (var i = root.children.length - 1; i >= 0; i--) {
                    toggle(root.children[i]);
                };
                isBasicInfoLoaded = true;
            }

            function toggleAll(d) {
                if (d.children) {
                    d.children.forEach(toggleAll);
                    toggle(d);
                }
            }

            if(typeof root.children !== 'undefined'){
                root.children.forEach(toggleAll); 
                for (var i = root.children.length - 1; i >= 0; i--) {
                    toggle(root.children[i]);
                };
            };

            if (typeof root.children !== 'undefined'  && root.children.length > 0) {
                update(slug, root, true);
            } else {
                $('#map_loading_div').hide();
                d3.select("svg").remove();
            }
        });
        return false;
    }

        $('.loadTree').on('click', function () {
            // $('svg').remove();
            loadTree($(this).attr('id'), $(this).attr('name'), category);
            return false;
        });


    function update(slug, source, nest) {
        var duration = d3.event && d3.event.altKey ? 5000 : 500;
        var nodes;
        if (!filterMode) {
            nodes = tree.nodes(root_origin).reverse();
        } else {
            nodes = tree.nodes(source).reverse();
        }

        nodes.forEach(function(d) {
            if (d.depth > 1) {
                d.y = d.depth * 200;
            } else {
                d.y = d.depth * 250;
            }
        });



        var node = vis.selectAll("g.node").data(nodes, function(d) {
            return d.id || (d.id = ++i);
        });

        var nodeEnter = node.enter().append("svg:g").call(dragListener).attr("class", "node").attr("transform", function(d) {
            return "translate(" + source.y0 + "," + source.x0 + ")";
        }).on("click", function(d) {
            toggle(d);
        }).on("mouseover", function(d) {      
            div.transition().duration(200).style("opacity", 1);

            var direction =  d.company_as == 'importer' ? 'from' : 'to';
            var parent = d.parent_name;
            if (typeof parent == 'undefined') {
                parent = '';
                direction = '';
            }
            var profile_url = "{{ url('member_importer_detail',  { 'slug' : "PLACEHOLDER", 'mode' : "5000" }) }}";
            var tooltipHtml = "<h6 style='margin-bottom:0px'><b>" + d.name + "</h6></b><p style='margin-bottom:10px'><a href=\'{{ url('member_search_shipments_result_us_imports_from_big_picture', { keyword : "NAMEPLACEHOLDER", category : "CATEGORYPLACEHODER", s_cache : s_cache_for_shipments  } ) }}\'>"  + d.shipment_count + " shipments </a> " 
                + direction + " <b>" + parent + "</b><p><a class='btn btn-primary' style='position:relative; overflow:auto;'>Show this profile</a><a class='btn btn-primary loadTree' onclick=\"loadTree(\'" + d.slug + "\', \'" + d.name + "\', \'" + (category == 'suppliers' ? 'buyers' : 'suppliers') + "\')\" style='position:relative; overflow:auto; margin-left: 10px'>Set as root</a>";
                
                // tooltipHtml = tooltipHtml.replace("XXPLACEHOLDERXX", "'" + d.slug + "'");
                // tooltipHtml = tooltipHtml.replace(" ", "");
            tooltipHtml = tooltipHtml.replace("NAMEPLACEHOLDER", d.name);
            var category = '{{ category }}';
            //..
            console.log("KATEGORIIII " + category);
            if (category == "buyers") { 
                if (d.depth == 0 || d.depth == 2) {
                    tooltipHtml = tooltipHtml.replace("CATEGORYPLACEHODER", "consignee_name");
                } else {
                    tooltipHtml = tooltipHtml.replace("CATEGORYPLACEHODER", "shipper_name");
                }
            } else if (category == "suppliers") {
                if (d.depth == 0 || d.depth == 2) {
                    tooltipHtml = tooltipHtml.replace("CATEGORYPLACEHODER", "shipper_name");
                } else {
                    tooltipHtml = tooltipHtml.replace("CATEGORYPLACEHODER", "consignee_name");
                }
            } else {
                    tooltipHtml = tooltipHtml.replace("CATEGORYPLACEHODER", "consignee_name");
            }
            profile_url = profile_url.replace("PLACEHOLDER", d.slug);
            profile_url = profile_url.replace("5000", 0);
            div.html(tooltipHtml)
            .style("box-shadow", "5px 5px 3px #888888")
            .style("left", (d3.event.pageX) + "px")     
            .style("top", (d3.event.pageY - 8) + "px");

        });

        nodeEnter.append("svg:circle").attr("r", 1e-6).style("fill", function(d) {
            return d._children ? "lightsteelblue" : "#fff";
        });

        nodeEnter.append("svg:text").attr("x", function(d) {
            return typeof d._children !== "undefined" || d.depth === 0 ? -10 : 10;
        }).attr("dy", ".35em").attr("text-anchor", function(d) {
            console.log("depth : " + d.depth);
            return typeof d._children !== "undefined" || d.depth === 0 ? "end" : "start";
        }).text(function(d) {
            return d.name;
        }).style("fill-opacity", 1e-6);

        var nodeUpdate = node.transition().duration(duration).attr("transform", function(d) {
            return "translate(" + d.y + "," + d.x + ")";
        });

        nodeUpdate.select("circle").attr("r", function(d) {
            var radius = 10 + (90 * (d.shipment_count) / highest_shipment);
            if (d.depth > 1) radius = 5;
            console.log(d.slug + "   (" + d.depth + ")    radius :      95 * " + d.shipment_count + "/" + highest_shipment + " = " + radius);
            return radius;
        })
        .style("fill", function(d) {
            return d._children ? "lightsteelblue" : "#fff";
        });

        nodeUpdate.select("text").style("fill-opacity", 1);

        var nodeExit = node.exit().transition().duration(duration).attr("transform", function(d) {
            return "translate(" + source.y + "," + source.x + ")";
        })
        .remove();

        nodeExit.select("circle").attr("r", 1e-6).attr("opacity", 1e-6);

        nodeExit.select("text").style("fill-opacity", 1e-6);

        var link = vis.selectAll("path.link").data(tree.links(nodes), function(d) {
            return d.target.id;
        });

        link.enter().insert("svg:path", "g").attr("class", "link").attr("d", function(d) {
            var o = {
                x: source.x0,
                y: source.y0
            };
            return diagonal({
                source: o,
                target: o
            });
        })
        .style("stroke-width", function(d) {
            var stroke_width = 10 + (90 * (d.target.shipment_count) / highest_shipment);
            if (d.target.depth > 1) stroke_width = 5;
            console.log(d.slug + "   (" + d.target.depth + ")    stroke_width :      95 * " + d.target.shipment_count + "/" + highest_shipment + " = " + stroke_width);
            return stroke_width;
        }).transition().duration(duration).attr("d", diagonal);

        link.transition().duration(duration).attr("d", diagonal);

        link.exit().transition().duration(duration).attr("d", function(d) {
            var o = {
                x: source.x,
                y: source.y
            };
            return diagonal({
                source: o,
                target: o
            });
        }).remove();

        var k = 1;
        var len = nodes.length;
        if (!filterMode) {
            nodes.reverse().forEach(function(d) {
                d.x0 = d.x;
                d.y0 = d.y;
                preloader_text.html("Loading the ancestors...");
                if (slug != d.slug && nest) {
                    var route = "{{ url('member_suppliers_big_picture_json', { 'slug' : "PLACEHOLDER", 'mode' : "5000", 'key': "PLACEHOLDER2", 'sort': "PLACEHOLDER3", 'date_range': "PLACEHOLDER4", 'country': "PLACEHOLDER5", 'limit': "PLACEHOLDER6", 'offset': "PLACEHOLDER7" }) }}";
                    if (category == 'suppliers') {
                        route = "{{ url('member_buyers_big_picture_json', { 'slug' : "PLACEHOLDER", 'mode' : "5000", 'key': "PLACEHOLDER2", 'sort': "PLACEHOLDER3", 'date_range': "PLACEHOLDER4", 'country': "PLACEHOLDER5", 'limit': "PLACEHOLDER6", 'offset': "PLACEHOLDER7" }) }}";
                    }
                    route = route.replace("PLACEHOLDER", d.slug);
                    route = route.replace("PLACEHOLDER2", key);
                    route = route.replace("PLACEHOLDER3", sort);
                    route = route.replace("PLACEHOLDER4", date_range);
                    route = route.replace("PLACEHOLDER5", country);
                    route = route.replace("PLACEHOLDER6", limit);
                    route = route.replace("PLACEHOLDER7", offset);
                    route = route.replace("5000", 1);
                    $.getJSON(route, function(json) {
                        console.log("\n\nbaru\n");
                        console.log(json);
                        preloader_img.hide();
                        if (typeof json.children !== 'undefined') {
                            console.log("\n\child ada\n");
                            var newnodes = tree.nodes(json.children).reverse();
                            d.children = newnodes[0];
                            update(d.slug, d, false);
                            // if (d.slug){
                            // }
                        } else {
                            console.log("\n\child TIDAK ada\n");
                        }
                        console.log("\n\nlen-1 : "+ (len-1) +"\n");
                        console.log("\n\nk : "+ k +"\n");
                        k++;
                    });
                }
            });
        }
    }

    function toggle(d) {
        if (d.children) {
            d._children = d.children;
            d.children = null;
        } else {
            d.children = d._children;
            d._children = null;
        }
    }

    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.j-choice-category').on('click', function () {
                var value = $(this).attr('data-value');
                var data_url = $(this).attr('data-url');
                var data_url_window = $(this).attr('data-url-window');

                $('.j-choice-category').parent('li').removeClass('active');
                $(this).parent('li').addClass('active');

                window.history.pushState("object or string", "Title", data_url_window);

                var totalCategory = $('#search_global_form_type_category').children('label').children(' input').length - 1;
                $('#search_global_form_type_category').children('label').children('input').removeAttr('checked');
                for (var i = 0; i < totalCategory; i++) {
                    $('.j-all').children('div').attr("style", "display:none");
                    if ($('#search_global_form_type_category').children('label').children('input').eq(i).val() == value) {
                        $('#search_global_form_type_category').children('label').children('input').eq(i).click();

                        $('.j-content-result-' + value).removeAttr("style");

                        $.ajax({
                            type: 'GET',
                            url: data_url,
                            // beforeSend: function () {
                            //     $('.j-total-exporter').html('<img src="/bundles/jariffproject/frontend/images-old/301_12.GIF">');
                            // },
                            success: function (data) {
                                var res = JSON.parse(data);
                                if (res.success) {
                                    if (value != 'logistics') {
                                        $('.j-content-result-' + value).children(".col-md-3").html(res.html_string);
                                    } else {
                                        $('.j-content-result-' + value).html(res.html_string);
                                    }

                                    $('.j-total-' + value).html(res.total_results);

                                }
                            }
                        });

                        break;
                    }


                }
            });


            $.ajax({
                type: 'GET',
                url: Routing.generate('member_search_big_picture_' + category + '_res', {'s_cache': '{{ s_cache }}' }),
                // beforeSend: function () {
                //     $('.j-total-exporter').html('<img src="/bundles/jariffproject/frontend/images-old/301_12.GIF">');
                // },
                success: function (data) {
                    // console.log(data);
                    var res = JSON.parse(data);

                    if (res.success) {

                        if ('{{ category }}' != 'logistics') {
                                console.log(res.slugs);
                                preloader_text.html("Loading the root company");
                                loadTree(res.slugs[0], res.names[0]);
                            $('.j-content-result').children(".col-md-3").html(res.html_string);

                            $.ajax({
                                type: 'GET',
                                url: Routing.generate('member_' + '{{ category }}' + '_show_filter_country_res', {s_cache: '{{ s_cache }}'}),
                                // beforeSend: function () {
                                //     $('.j-total-exporter').html('<img src="/bundles/jariffproject/frontend/images-old/301_12.GIF">');
                                // },
                                success: function (data) {
                                    var res = JSON.parse(data);

                                    if (res.success) {
                                        $('.j-content-result').children(".col-md-9").children(".j-form-country-" + '{{ category }}').html(res.html_string);
                                    }
                                }
                            })

                        } else {
                            $('.j-content-result').html(res.html_string);
                        }


                        $('.j-total-' + '{{ category }}').html(res.total_results);


                    }
                }
            })


            $(".j-subscribe").on("click", function () {
                $('.bs-example-modal-sm').modal({
                    show: true
                })
            })

            $('.j-modal-save').on('click', function () {
                var active_category = $('li.active').children('a').attr('data-value');

                $.ajax({
                    type: 'GET',
                    url: Routing.generate('member_display_modal_save_shipments',{'slug_country_subscription':'st-globals-'+active_category,'s_cache' : '{{ s_cache }}' }),
                    beforeSend: function () {
                        $('.st-content').html('<div class="css3-spinner">' +
                                '<div class="css3-spinner-bounce1"></div>' +
                                '<div class="css3-spinner-bounce2"></div>' +
                                '<div class="css3-spinner-bounce3"></div>' +
                                '</div>'
                        );
                    },
                    success: function (data) {
                        var res = JSON.parse(data);

                        if (res.success) {
                            $('.st-content').html(res.html_string);
                        }
                    }
                })
            })

        })

        $('.j-modal-exports').on('click', function () {
            var active_category = $('li.active').children('a').attr('data-value');

            $.ajax({
                type: 'GET',
                url: Routing.generate('member_display_modal_exports_shipments',{'collection':'st-globals-'+active_category,'s_cache' : '{{ s_cache }}' }),
                beforeSend: function () {
                    $('.st-content').html('<div class="css3-spinner">' +
                            '<div class="css3-spinner-bounce1"></div>' +
                            '<div class="css3-spinner-bounce2"></div>' +
                            '<div class="css3-spinner-bounce3"></div>' +
                            '</div>'
                    );
                },
                success: function (data) {
                    var res = JSON.parse(data);

                    if (res.success) {
                        $('.st-content').html(res.html_string);
                    }
                }
            })
        })


        var $collectionHolder;

        //        $('.j-show').children('div').addClass('form-group');

        // setup an "add a tag" link
        var $addFilterLink = $('<div class="form-group"><div class="col-md-2">' +
                ' <a href="#" class="add_filter_link btn btn-info">Add Criteria <span class="glyphicon glyphicon-circle-arrow-down" aria-hidden="true"></span></a></div></div>');
        // var $newLinkLi = $('<div></div>').append($addFilterLink);

        jQuery(document).ready(function () {
            // Get the ul that holds the collection of tags
            $collectionHolder = $('div.j-show');

            // add a delete link to all of the existing tag form li elements
            $collectionHolder.find('div.j-add-filter').each(function () {
                if ($(this).length > 1) {
                    addTagFormDeleteLink($(this));
                }
            });

            // add the "add a tag" anchor and li to the tags ul
            // $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addFilterLink.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                var check = $('h5.show');

                if (check.length == 1) {
                    $("#dialog-message").dialog({
                        modal: true
                    });
                    return false;
                }

                // add a new tag form (see next code block)
                // addTagForm($collectionHolder, $newLinkLi);
            });


        });

        function addTagForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            console.log(prototype);

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<div><div style="clear: both"></div></div> ').append(newForm);
            $newLinkLi.before($newFormLi);

            // add a delete link to the new form
            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<div class="form-group">' +
                    '<div class="col-md-1">' +
                    '<a href="#" class="j-different-remove btn btn-danger" style="font-size: 16px;"' +
                    'title="Delete This Filter"> <span class="glyphicon glyphicon-remove" aria-hidden="true"' +
                    '></span> remove </a>' +
                    '</div>' +
                    '</div>');
            $tagFormLi.append($removeFormA);

            $removeFormA.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }
    </script>

{% endblock %}
